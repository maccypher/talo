doctype html
html(lang="en" ng-app="homePage" ng-controller="mainCtrl")
  head
    meta(charset="UTF-8")
    
    title
      | New Tab - talo
    
    meta(name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no")
    
    link(rel="stylesheet" type="text/css" href="main.css")
    link(rel="stylesheet" type="text/css" ng-href="assets/themes/{{cssTheme}}/style.css")

    script(type="text/javascript" src="assets/scripts/angular.min.js")
    script(type="text/javascript" src="assets/scripts/localStorage.js")
    script(type="text/javascript" src="app.js")

  body
    div#topbar
      div#settingsOpener
        a.openSettings(ng-click="isCollapsed = !isCollapsed; sClose($event, this)" title="Feed URL Settings")
          i.mdfi_navigation_menu

      div.headLine
        h1 Bookmarks

      div.filter
        a.mdfi_action_search.toggleSearch(ng-click="sToggle($event, this)" ng-class="{'tActive': searchActive, 'tInactive': !searchActive}")
        input.queryInput(
          type="search" 
          ng-model="query" 
          placeholder="Filter" 
          ng-class="{'sActive': searchActive, 'sInactive': !searchActive}"
        )
        div#fakeInput(ng-class="{'fActive': searchActive, 'fInactive': !searchActive}")

    section.mainSection
      div(ng-class="{'overlay': isCollapsed}" ng-click="toggle()")

      div#content(ng-class="{'rssOpen': view == true, 'rssClosed': view == false}")
        div.column(ng-repeat="cat in cats" class="{{column}}")
          h2.catName {{cat.name}}
          ul.bookmarks
            li(ng-repeat="item in cat.items | filter: query")
              a(href="{{item.url}}") {{item.name}}

      div#readerPanel(ng-class="{'readerOpen': view == true, 'readerClosed': view == false}")
      div#innerReader(ng-class="{'readerOpen': view == true, 'readerClosed': view == false}")
        div.info(ng-class="{'offline': offline}")
          p You are probably offline
          a#reloadTrigger(ng-class="{'run': refresh == true, 'stopped': refresh == false}" ng-click="fetchFeed(); fetchIndicator();")
            i.icon-update

        div#rssSettings(ng-class="{'showRssSettings': rssSettingsOpen, 'hideRssSettings': !rssSettingsOpen}")
          div.headLineBlock
            h1 Settings
            a.closeRssSettings(ng-click="rssSettingsToggle()")
              i.icon-close

          div.infoText
            p
              strong ATTENTION:
            | Make sure your feed URL calls a JSON based feed. Your feed URL should look like this:<br>"<i>http://feeds.domain.tld/json/feedname</i>"<br>Additionally you MUST put the URL in the "manifest.json" file in the "permissions" section as well.
            
          div.currentFeedUrl
            | Current Feed URL:
            textarea#currentURL(onClick="SelectAll('currentURL')" readonly) {{feedUrl}}

          input#feedUrl.animateAll(type="text" ng-model="newFeedUrl" placeholder="New Feed URL")
          input.btnBlue.animateAll(type="submit" ng-click="setFeedUrl()" value="Save Feed Url")

        div.headLineBlock
          h1 RSS Reader
          a.rssSettingsTrigger(ng-click="rssSettingsToggle()")
            i.icon-cog(title="Feed URL Settings")

        //- Feed content starts here
        div.feedList
          ul
            li(ng-repeat="item in feedItems" ng-class="{'newItem': item.new}")
              a(href="{{item.u}}" target="_blank") {{item.d}}
              div.timeStamp {{item.dt | date: 'yyyy-MM-dd (HH:mm)'}}
        //- Feed content ends here

    aside.sideBar(ng-class="{'showIt': isCollapsed, 'hideIt': !isCollapsed, 'fixIt': !subOpened}")
      div.sidebarHeader
        span.settingsHead(ng-class="{'showRoot': !subOpened, 'hideRoot': subOpened}")
          i.mdfi_action_settings
          p Settings

        a.settingsHead(ng-class="{'showSub1': subOpened, 'hideSub1': !subOpened}"
          ng-click="closeSubMenu(openSub);")
          i.mdfi_hardware_keyboard_arrow_left
          p {{subMenu[openSub].name}}

        a.closeSettings(ng-click="toggle()")
          i.mdfi_navigation_close

      div#addBookmark(ng-class="{'showIt': !subOpened, 'hideIt': subOpened}")
        div.addButton(ng-click="addBookmarkToggle()" ng-class="{'open': addBookmarkOpen, 'closed': !addBookmarkOpen}")
          i.mdfi_content_add
          div.tooltip Add Bookmark

        div.container(ng-class="{'open': addBookmarkOpen, 'closed': !addBookmarkOpen}")
          h3.thirdHeadline Add Bookmark
          input#newCat.animateAll(type="text" ng-model="newCat" placeholder="Category")
          input#newUrl.animateAll(type="text" ng-model="newUrl" placeholder="Url")
          input#newName.animateAll(type="text" ng-model="newName" placeholder="Name")
          input.btn.btnCancel.animateAll(type="reset" ng-click="addBookmarkToggle(); clearForm();" value="Cancel")
          input.btn.btnSave.animateAll(type="submit" ng-click="addNew()" value="Save")

      div#menu(ng-class="{'open': addBookmarkOpen, 'closed': !addBookmarkOpen, 'subOpen': subOpened, 'subClosed': !subOpened}")
        ul.settingsMenu
          li
            a(ng-click="openSubMenu('bookmarks');")
              i.mdfi_editor_mode_edit
              span Edit Bookmarks
          li
            a(ng-click="openSubMenu('backup');")
              i.mdfi_action_settings_backup_restore
              span Backup / Restore
          li
            a(ng-click=" openSubMenu('appearance');")
              i.mdfi_image_style
              span Appearance
          li
            a(ng-click="openSubMenu('view');")
              i.mdfi_action_view_column
              span View
          li
            a(ng-click="openSubMenu('rss');")
              i.mdfi_hardware_cast
              span RSS Reader

      div#editBookmarks(ng-class="{'open': subMenu['bookmarks'].open, 'closed': !subMenu['bookmarks'].open}")
        //- h3.thirdHeadline Edit Bookmarks:
        div.container
          ul.catList
            li(ng-repeat="cat in cats | orderBy: name")
              h4.fourthHeadline {{cat.name}}
              ul.editBookmarks
                li.editBookmarksItem(ng-repeat="editItem in cat.items")

                  div.editEntry(ng-class="{'open': editing, 'closed': !editing}")
                    input#modCat.animateAll(type="text" ng-model="editItem.cat")
                    input#modUrl.animateAll(type="text" ng-model="editItem.url")
                    input#modName.animateAll(type="text" ng-model="editItem.name")
                    input.btn.btnCancel.animateAll(type="submit" ng-click="editing = false" value="Cancel")
                    input.btn.btnSave.animateAll(type="submit" ng-click="saveItem(editItem); editing = false" value="Save")
                  div.verifyDelete(ng-class="{'open': verify, 'closed': !verify}")
                    p Are you sure, you wanna delete <br /><strong>"{{editItem.name}}"</strong>?
                    input.btn.btnCancel.animateAll(type="submit" ng-click="verify = false" value="Cancel")
                    input.btn.btnDelete.animateAll(type="submit" ng-click="delItem(editItem.id); verify = false" value="Delete")
                  div.animateAll.entry(ng-hide="editing || verify")
                    a.delBtn(ng-click="verify = !verify")
                      i.mdfi_action_delete
                    a.editBtn(ng-click="editing = !editing")
                      i.mdfi_editor_mode_edit
                    span.entryName {{editItem.name}}
        
        input.btn.btnDelete.btnDeleteAll.animateAll(type="submit" ng-click="confirmClearAll()" value="Delete All & Restore Defaults")

      div#backup(ng-class="{'open': subMenu['backup'].open, 'closed': !subMenu['backup'].open}")
        div.subSubMenu
          a.selectOption.animateAll(ng-click="openImport(); exportOpen = false")
            i.mdfi_action_restore
            | Restore Backup
          
          a.selectOption.animateAll(ng-click="exportData(); importOpen = false") 
            i.mdfi_action_backup
            | Create Backup

        div#exportBox(ng-class="{'openEx': exportOpen, 'closedEx': !exportOpen}")
          h4.fourthHeadline Backup - Data Export
          div.container
            p.infoText
              | You can either copy the content from the textarea and save it in a text file manually or download the pre-defined file called "talo_backup.txt".
            a.closeImEx(ng-click="closeExport()")
              i.mdfi_navigation_close

            textarea.imexJson(ng-bind="exportJson" ng-copy="copied=true" ng-init="copied=false" readonly)
            p.clear
              input.btn.btnSave.animateAll(type="submit" ng-click="download()" value="Download File")
            //- br.clear
        
        div#importBox(ng-class="{'openIm': importOpen, 'closedIm': !importOpen}")
          h4.fourthHeadline Restore - Data Import
          div.container
            p.infoText
              | To import your former created backup, please open the downloaded file with your favorite text-editor and copy the content from the file into the textarea.
            
            a.closeImEx(ng-click="closeImport()")
              i.mdfi_navigation_close

            form(name="doImport")
              textarea.imexJson(ng-model="importJson" required placeholder="Paste data here ...")
              p.clear
                input.btn.animateAll(ng-disabled="doImport.$invalid" type="submit" ng-click="restoreClean()" value="Restore Clean")
                input.btn.btnSave.animateAll(ng-disabled="doImport.$invalid" type="submit" ng-click="restoreAdd()" value="Add Data")

      div#appearance(ng-class="{'open': subMenu['appearance'].open, 'closed': !subMenu['appearance'].open}")
        h3.thirdHeadline Select Theme:
        div.container
          select.selectTheme(
            ng-model="selectedTheme"
            ng-options="key as name for (key, name) in themes"
          )
          br
          div.layout
            h4 Columns to show 
            input#oneColumn(type="radio" value="one" ng-model="column")
            label(for="oneColumn" ng-class="{'active': ceckedColumn == 'one', 'inactive': ceckedColumn !== 'one' }")
              i.icon-ok
              | One
            input#twoColumn(type="radio" value="two" ng-model="column")
            label(for="twoColumn" ng-class="{'active': ceckedColumn == 'two', 'inactive': ceckedColumn !== 'two' }")
              i.icon-ok
              | Two
            input#threeColumn(type="radio" value="three" ng-model="column")
            label(for="threeColumn" ng-class="{'active': ceckedColumn == 'three', 'inactive': ceckedColumn !== 'three' }")
              i.icon-ok
              | Three
            input#fourColumn(type="radio" value="four" ng-model="column")
            label(for="fourColumn" ng-class="{'active': ceckedColumn == 'four', 'inactive': ceckedColumn !== 'four' }")
              i.icon-ok
              | Four

      div#view(ng-class="{'open': subMenu['view'].open, 'closed': !subMenu['view'].open}")
        p VIEW

      div#rssSettings(ng-class="{'open': subMenu['rss'].open, 'closed': !subMenu['rss'].open}")
        h3.thirdHeadline RSS Reader:
        div.container
          div.rssSettings
            input#useReader(type="checkbox" value="true" ng-model="useReader")
            label(for="useReader" ng-class="{'active': useReader == true, 'inactive': useReader == false }")
              i.icon-ok
              | Use RSS Reader


      div#copyright(ng-class="{'rssOpen': view == true, 'rssClosed': view == false}")
        a(href="https://github.com/maccypher/talo")
          | <strong>TALO<sup>2</sup></strong> &copy; 2015 by MacCypher
          i.icon-github

    section#dialogs
      div#confirmClearBox(ng-show="confirmClear")
        div.container
          h3.thirdHeadline Confirm Delete and Restore
          input.btnBlue.btnLeft.animateAll(type="submit" ng-click="cancelClear(); confirmClear = false" value="Cancel")
          input.btnRed.btnRight.animateAll(type="submit" ng-click="clearAll(); confirmClear = false" value="Delete All")
          br.clear

      
          br.clear
